[params]
## General run parameters
fmin=1e-4
fmax=1e-2
## Duration in seconds, should be compatiable with fmin.
duration=1.57e7
## Segment length for fft in seconds, should be compatiable with fmin
# Note by SB: Looks like this needs to be at least a factor of 10 larger than 1/fmin to give consistant recoveries.
seglen=1e5
## Sample rate in Hz, should be compatible with fmax
# Note by SB: Looks like this needs to be atleast a factor of 4
# higher than fmax (as opposed to the usual factor of 2) to give
# consistent recoveries.
fs=0.25
Shfile=LISA_2017_PSD_M.npy
## Healpix nside (skymap resolution)
nside=4
## Start time in seconds. Determines starting orbital postion.
tstart = 0

## LISA configuration. Can be stationary or orbiting
lisa_config=orbiting

## Level of the tdi. Can be michelson, xyz or aet
tdi_lev=xyz

# If the mldc flag is set to 1, then the time series data is read in from a file.
mldc=0
datafile=mldc_tdi_withnoise.txt

# Doppler or strain data. MLDC data is doppler, autogenerated data is strain. Can be doppler or strain.
datatype=strain

# fref parameter useful for powerlaw stochastic backgrounds
fref = 25
## Recovery model type, can be isgwb, sph_sgwb, dwd_fg, dwd_sdg, isgwb_only or noise_only for now
modeltype=dwd_fg
## Recovery spectrum model, for use with the dwd_fg model. Can be 'powerlaw', 'broken_powerlaw', or 'truncated_powerlaw'
# 'truncated_powerlaw' is a broken power law where the slope of the second power law is fixed.
spectrum_model=free_broken_powerlaw
# if 'truncated_powerlaw', also need a (fixed, steep) power law slope (alpha2) for the second power law
truncation_alpha=-50
## spherical harmonic lmax for the a_lms
lmax = 1
# Truevals for whatever parameters are being used.
# This should be a comma seperate list WITHOUT spaces
# For sph, the list is alpha, {log_omega_lm}, Np, Na
truevals=0.667,-5.398,-41.045,-48.443

## Sampler to use. Supported: dynesty, emcee
sampler=dynesty

[inj]
## Power Law Injection
# Omege0 is defined as the power at 1e-3 Hz
doInj=1
# the monopole dimensionless energy density
omega0=2e-7
# the spectral index
alpha=0.667
# Position noise
Np=9e-42
# Acceleration noise
Na=3.6e-49

## What type of simulated signal to add? Same choices as modeltype above. 
injtype=dwd_fg

## Galactic Foreground Injection
# Which kind of spatial injection to do. Can be a simple model with rh and zh as parameters ('breivik2020') or generated from a full binary catalogue ('population')
fg_type=population

## For the breivik2020 model:
# Disk geometry; thin disk has rh=2.9kpc, zh=0.3kpc; Thick disk has rh=3.31kpc, zh=0.9kpc.
# radial scale height of DWD population (kpc)
rh=2.9
# vertical scale height of DWD population (kpc)
zh=0.3

## For the spherical dwarf galaxy model:
# Sphere centered at the specificed coordinates, default values are for the LMC
sdg_RA = 80.21496
sdg_DEC = -69.37772
## Distance to center of galaxy from Earth (kpc)
sdg_DIST = 50
## Radius of the galaxy (kpc)
sdg_RAD = 2.1462
## Number of DWDs to be distributed throughout the sphere
sdg_NUM = 2169264

## For the population model:
# Data file
popfile=/home/vuk/rieck094/blip/Storage/populations/LMC_LISA_27GM_Fixed.txt
# Column names (comma-delineated, no spaces)
columns=ra,dec,age,m1,m2,r1,r2,a,f,chirp,lat,long,h,i,pol,phase,d,mass_transfer,detectable
# Delimiter used in data file. For tab- and space-delimited files, enter tab or space, respectively
delimiter=,
# SNR cut used to determine resolved vs. unresolved sources
SNRcut=7

## Foreground Spectrum Type; Foreground can be a simple power law ('powerlaw'), a more realistic truncated spectrum ('truncated'), a broken power law ('broken_powerlaw'), or (WIP) created from a binary population catalogue ('population')
fg_spectrum=population
## truncated
# log cutoff frequency for truncated power law
log_fcut=-2.77
## broken_powerlaw
# spectral index of the 1st powerlaw
# (alpha2 will be alpha1 - 0.667 for DWD FG)
alpha1=-2.33
# amplitudes of each component
log_A1 = -21
log_A2 = -14

## if inj_type==sph_sgwb what are the blm values.
# Complex quantities in a comma seperated list in healpix order
# b00 can only be 1. b_{l, -m} = (-1)**m b_lm
# blms = b00, b10, b11 for blmax = 1, alamx = 2 
# blms = b00, b10, b20, b11, b21, b22 for blmax = 2, almax = 4
# blms = b00, b10, b20, b30, b11, b21, b31, b22, b32, b33 for blmax = 3, almax = 6
# blms   = 1.0, 0.75, 0.5, 0.7j, 0.7-0.3j, 1.1j 

[run_params] # Parameters related to the run or to the sampler
out_dir=./Storage/9-29-runs/f-6m-l1
verbose=1
# Set doPreProc to 1 to force generation of fake data again rather than using precalculated data in the data_spectrum file
doPreProc=0
# Projection used for making skymaps. Can be 'E' (ecliptic) or 'G' (galactic)
projection=G
# number of live points for the dynesty sampler
nlive=800
# For multiprocessing, number of threads
# Warning: most often, multithreading the dynesty sampler does not result in significant gains as its proposal process must be serial.
Nthreads=1
# If FixSeed is true, the sampler will use random states generated by the seed given in the 'seed' parameter below. This allows for reproduction of sampling results; for a given seed value, repeated analyses of the same dataset will produce precisely identical results. The seed can be any unsigned 32-bit integer.
FixSeed=1
seed=42
# Must be .npz file
input_spectrum=data_spectrum.npz

## Checkpointing and restarting (dynesty only)
# If checkpoint is true, the sampler will save its current state every checkpoint_interval seconds.
# To resume an interrupted checkpointed run, run blip on the copy of the params file in the output directory with 'resume' as an additional argument
# e.g. python3 run_blip.py [path/to/out_dir/params_file] resume
checkpoint=1
# Checkpointing interval in seconds
checkpoint_interval=300
