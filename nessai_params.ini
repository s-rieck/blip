[params]
## General run parameters
fmin=1e-4
fmax=4e-3
## Duration in seconds, should be compatiable with fmin.
duration=5e5
## Segment length for fft in seconds, should be compatiable with fmin
# Note by SB: Looks like this needs to be at least a factor of 10 larger than 1/fmin to give consistant recoveries.
seglen=1e5
## Sample rate in Hz, should be compatible with fmax
# Note by SB: Looks like this needs to be atleast a factor of 4
# higher than fmax (as opposed to the usual factor of 2) to give
# consistent recoveries.
fs=0.25
Shfile=LISA_2017_PSD_M.npy
## Healpix nside (skymap resolution)
nside=2
## Start time in seconds. Determines starting orbital postion.
tstart = 0

## LISA configuration. Can be stationary or orbiting
lisa_config=orbiting

## Level of the tdi. Can be michelson, xyz or aet
tdi_lev=xyz

# If the mldc flag is set to 1, then the time series data is read in from a file.
mldc=0
datafile=mldc_tdi_withnoise.txt

# Doppler or strain data. MLDC data is doppler, autogenerated data is strain. Can be doppler or strain.
datatype=strain

# fref parameter useful for powerlaw stochastic backgrounds
fref = 25

## Recovery model type, can be isgwb, sph_sgwb, isgwb_only, or noise_only
modeltype=sph_sgwb
## Recovery spectrum model. Can be 'powerlaw', 'broken_powerlaw', or 'free_broken_powerlaw'.
spectrum_model=broken_powerlaw_2
## spherical harmonic lmax for the b_lms (a_lmax/2)
lmax = 3
# Truevals for whatever parameters are being used.
# This should be a comma seperate list WITHOUT spaces
# For sph, the list is alpha, {log_omega_lm}, Np, Na
truevals=0.667,-5.398,-41.045,-48.443

## Sampler to use. Supported: dynesty, emcee, nessai
sampler=nessai


[inj]
## Injections
doInj=1

# Position noise
Np=9e-42
# Acceleration noise
Na=3.6e-49

## What type of simulated signal to add? Can be isgwb, sph_sgwb, astro, isgwb_only, or noise_only
injtype=astro

## Spectral Injection
# Can be a simple power law ('powerlaw') or a broken power law ('broken_powerlaw'), or created from a binary population catalogue ('population')
spectral_inj=broken_powerlaw_2

# Power law injection
# Omege0 is defined as the power at 1e-3 Hz
# the monopole dimensionless energy density
omega0=2e-7
# the spectral index
alpha=0.667

# (Free) Broken Powerlaw (2)
# For broken_powerlaw_2, set omega0 (above)
#     as well as alpha1, alpha2, and f_break (below)
# spectral index of the 1st powerlaw
# (alpha2 will be alpha1 - 0.667 for broken_powerlaw)
alpha1=0.667
# for free_broken_powerlaw, set alpha2 manually
alpha2=20
# amplitudes of each component
log_A1 = -24
log_A2 = -19
# break frequency (in Hz) for broken_powerlaw_2
f_break = 2e-3

# Population injection
# (these settings also apply to the spatial population injection below)
# Data file
popfile=/mnt/c/Users/Alexander/Documents/LISA/LISA_data/DWD_FullPopulation_Wilhelm_etal_2020_30deg.txt
# Column names (comma-delineated, no spaces)
columns=f,fdot,lat,long,h,i,pol,phase
# Delimiter used in data file. For tab- and space-delimited files, enter tab or space, respectively
delimiter=space
# SNR cut used to determine resolved vs. unresolved sources
SNRcut=7

## Spherical Harmonic Spatial Injection
# if inj_type==sph_sgwb what are the blm values.
# Complex quantities in a comma seperated list in healpix order
# b00 can only be 1. b_{l, -m} = (-1)**m b_lm
# blms = b00, b10, b11 for blmax = 1, alamx = 2 
# blms = b00, b10, b20, b11, b21, b22 for blmax = 2, almax = 4
# blms = b00, b10, b20, b30, b11, b21, b31, b22, b32, b33 for blmax = 3, almax = 6
# blms   = 1.0, 0.75, 0.5, 0.7j, 0.7-0.3j, 1.1j 
blms = 1.0, 0.75, 0.7j

## Astrophysical Spatial Injections
# A wide variety of anisotropic astrophysical injections are supported under this umbrella. Current options include toy models of the galactic foreground and LMC DWD stochastic signals, one- and two-point-source injections, and generation of stochastic signals from population synthesis catalogues. The spatial and spectral distributions can be specified separately.

# Which kind of spatial injection to perform. Can be a simple galactic model with rh and zh as parameters ('breivik2020'), a simple spherical extended source analagous to a Milky Way satellite dwarf galaxy ('sdg'), one- or two-point source injections ('point_source' and 'two_point'), or generated from a full binary catalogue ('population').

spatial_inj=breivik2020
# Which injection basis to use (for astrophysical signal injections)
# can be sph. harm. ('sph') sph. harm. with manually-set lmax independent of the analysis lmax ('sph_lmax'), or pixel basis ('pixel')
injbasis=sph

# if injection basis is 'sph_lmax', what blmax to inject at:
inj_lmax=4

# For the galactic breivik2020 model:
# Disk geometry; thin disk has rh=2.9kpc, zh=0.3kpc; Thick disk has rh=3.31kpc, zh=0.9kpc.
# radial scale height of DWD population (kpc)
rh=2.9
# vertical scale height of DWD population (kpc)
zh=0.3

## sdg, ps, and tps injection parameters should go here
# For the satellite dwarf galaxy injection
# sdg_[RA,DEC,DIST,RAD, & NUM] are the desired right ascension, declination, distance in kpc, radius in kpc, and number of DWD binaries of the simulated satellite dwarf galaxy.
# default values are for the LMC
sdg_RA=80.21496
sdg_DEC=-69.37772
sdg_DIST=50
sdg_RAD=2.1462
sdg_NUM=2169264

# For the point source injection
# Note that for now single point source pixel-basis injections don't work (fix in progress)
theta=1.5707963267948966
phi=1.5707963267948966

# For the two-point source injection
theta_1=1.2
phi_1=0.5
theta_2=1.7
phi_2=0.9

[run_params] # Parameters related to the run or to the sampler
verbose=1
# Set doPreProc to 1 to force generation of fake data again rather than using precalculated data in the data_spectrum file
doPreProc=0
# Projection used for making skymaps. Can be 'E' (ecliptic) or 'G' (galactic)
projection=E
# number of live points for the dynesty sampler
nlive=2000
# For multiprocessing, number of threads
# Warning: most often, multithreading the dynesty sampler does not result in significant gains as its proposal process must be serial.
Nthreads=4
# If FixSeed is true, the sampler will use random states generated by the seed given in the 'seed' parameter below. This allows for reproduction of sampling results; for a given seed value, repeated analyses of the same dataset will produce precisely identical results. The seed can be any unsigned 32-bit integer.
FixSeed=1
seed=42
# Must be .npz file
input_spectrum=data_spectrum.npz

## Checkpointing and restarting (dynesty only)
# If checkpoint is true, the sampler will save its current state every checkpoint_interval seconds.
# To resume an interrupted checkpointed run, run blip on the copy of the params file in the output directory with 'resume' as an additional argument
# e.g. python3 run_blip.py [path/to/out_dir/params_file] resume
checkpoint=0
# Checkpointing interval in seconds
checkpoint_interval=600

## Sampling method (dynesty only)
# see https://dynesty.readthedocs.io/en/latest/quickstart.html?highlight=method#sampling-options
# rslice recommended for MW foreground analyses
sample_method=rslice

## output directory
out_dir=./Storage/nessai_test/19-nestest-neuron-flow-update-short-2/